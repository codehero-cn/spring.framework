<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
	<!-- 属性注入 -->
	<bean id="helloWorld" class="cn.codehero.spring.beans.HelloWorld">
		<property name="name2" value="Spring"></property>
	</bean>

	<!-- 通过构造器方法来配置 bean的属性 -->
	<bean id="car1" class="cn.codehero.spring.beans.Car">
		<constructor-arg value="Audi" index="0"></constructor-arg>
		<constructor-arg value="ShangHai" index="1"></constructor-arg>
		<constructor-arg value="300000" index="2"></constructor-arg>
	</bean>

	<!-- 使用构造器注入属性值可以指定参数的位置和参数的类型！以区分重载的构造器！ -->
	<bean id="car2" class="cn.codehero.spring.beans.Car">
		<constructor-arg value="宝马" type="java.lang.String"></constructor-arg>
		<!-- 如果字面值包含特殊字符可以使用<![CDATA[]]包裹起来 -->
		<!-- 采用子节点方法 -->
		<constructor-arg type="java.lang.String">
			<value><![CDATA[<ShangHai>]]></value>
		</constructor-arg>
		<constructor-arg type="int">
			<value>240</value>
		</constructor-arg>
	</bean>

	<!-- 引入其他bean -->
	<bean id="person1" class="cn.codehero.spring.beans.Person">
		<property name="name" value="Tom"></property>
		<property name="age" value="24"></property>
		<property name="car" ref="car2"></property>
		<!-- 可以使用property的ref属性建立bean之间的引用关系 -->
		<!-- 也可以采用下面这种方法 -->
		<!-- <property name="car">
			<ref bean="car2"></ref>
			</property> -->
		<!-- 内部bean -->
		<!-- <property name="car">-->
			<!-- <bean class="cn.codehero.spring.beans.Car"> -->
				<!-- <constructor-arg value="Ford"></constructor-arg> -->
				<!-- <constructor-arg value="长安"></constructor-arg> -->
				<!-- <constructor-arg value="200000" type="double"></constructor-arg> -->
			<!-- </bean> -->
		<!-- </property>  -->
	</bean> 
	
	<!-- 其中的car1好象也只能用构造赋值的方法才行 -->
	<bean id="person2" class="cn.codehero.spring.beans.Person">
		<constructor-arg value="Jerry"></constructor-arg>
		<constructor-arg value="25"></constructor-arg>
		<constructor-arg ref="car1" ></constructor-arg>
		<!-- 测试赋值null -->
		<!-- <constructor-arg><null/></constructor-arg> -->
		<!-- 测试级联属性赋值,注意属性需要先初始化后才可以为级联属性赋值，否则会有异常，和Struts2不同    实验没成功-->
		<!-- <property name="car1.maxSpeed" value="250"></property>		 -->	
	</bean>
	
</beans>

