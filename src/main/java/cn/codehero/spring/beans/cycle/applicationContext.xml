<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="carid" class="cn.codehero.spring.beans.cycle.Car"
		init-method="init"
		destroy-method="mydestroy">
		<property name="brand" value="Audi"></property>	
	</bean>
	
	<!--BeanPostProcessor使用方法1： 实际开发不用此法
	     实现BeanPostProcessor接口，并具体提供
		postProcessBeforeInitialization(Object bean, String beanName):init-method之前被调用
		postProcessAfterInitialization(Object bean, String beanName):init-method之后被调用
		的实现
		
		bean:bean实例本身
		beanName:IOC容器配置的bean的名字
		返回值:是实际上返回给用户的那个Bean，注意:可以在以上两个方法中修改返回的bean,甚至返回一个新的bean
	 -->	
	<!--BeanPostProcessor使用方法2：对所有的bean都起作用
	       配置自己的bean的后置处理器:不配置id也可以,IOC容器自动识别是一个BeanPostProcessor -->	
	<bean class="cn.codehero.spring.beans.cycle.MyBeanPostProcessor"></bean>
		
</beans>
